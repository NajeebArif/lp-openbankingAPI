plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "org.openapi.generator" version "5.0.0"
}

ext {
	set('keycloakVersion', '12.0.2')
}

group = 'io.better-banking'
version = '1.3.2'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.keycloak:keycloak-spring-boot-starter'

	compileOnly 'org.projectlombok:lombok:1.18.16'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtime 'mysql:mysql-connector-java'

	testCompileOnly 'org.projectlombok:lombok:1.18.16'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testCompile group: 'io.rest-assured', name: 'spring-mock-mvc', version: '3.0.0'

	testCompile "org.testcontainers:testcontainers:1.15.1"
	testCompile "org.testcontainers:junit-jupiter:1.15.1"
	testCompile "org.testcontainers:mysql:1.15.1"

	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.1'

	compile 'io.github.resilience4j:resilience4j-spring-boot2:1.5.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	testImplementation 'com.squareup.okhttp3:mockwebserver:4.8.1'
	implementation 'com.squareup.okhttp3:okhttp:4.8.1'

	implementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.keycloak.bom:keycloak-adapter-bom:${keycloakVersion}"
	}
}

test {
	useJUnitPlatform()
}

task srcZip(type: Zip) {
	classifier = 'src'
	from projectDir
	include 'open-api/*'
	include 'src/**/*'
	include '*.gradle'
	include 'README.md'
	doLast {
		println "Path to zip: $archivePath.path"
	}
}

openApiGenerate {
	generatorName = "spring"
	generateModelDocumentation = false
	generateApiDocumentation = false
	inputSpec = "$rootDir/open-api/open-banking.yaml".toString()
	outputDir = "$buildDir/generated".toString()
	invokerPackage = "com.acme.banking.invoker"
	modelPackage = "com.acme.banking.model"
	apiPackage = "com.acme.banking.api"
	configOptions = [
			dateLibrary: "java8",
			basePackage: "com.acme.banking",
			interfaceOnly: "true",
			useBeanValidation: "false"
	]
}

task copyGenerated(type: Copy) {
	from "$buildDir/generated/src/main/java/com/acme/banking/model"
	into "$rootDir/src/main/java/com/acme/banking/model"
}

task cleanGenerated(type: Delete) {
	delete "$rootDir/src/main/java/com"
}

clean.dependsOn cleanGenerated